        8　6　1　10　5　3　9　2　7　4
        if nums is None or len(nums) == 0:
            return
        self.quickSort(nums, 0 , len(nums) - 1)
        return nums
         

    def quickSort(self, nums, start, end):
        if start >= end: 
            return
        
        left, right = start, end
        pivot = nums[(start + end) // 2] # // 取商數
        
        while left <= right:
            while left <= right and nums[left] < pivot:
                left += 1
            while left <= right and nums[right] > pivot:
                right -= 1     
            if left <= right:
                nums[left], nums[right] = nums[right], nums[left]
                left += 1
                right -= 1
                
        self.quickSort(nums, start, right)
        self.quickSort(nums, left, end)
